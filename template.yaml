AWSTemplateFormatVersion: '2010-09-09'
Description: Lambda Function

Resources:
  Function:
    Type: AWS::Lambda::Function
    Properties:
      Architectures:
        - x86_64
      Code:
        ZipFile: |
          import json
          import platform


          def lambda_handler(*_):
              platform_data = platform.uname()

              return {
                  "statusCode": 200,
                  "body": json.dumps(
                      {
                          "message": f"Welcome to a lambda running on an {platform_data.machine} machine using an {platform_data.processor} processor",
                      }
                  ),
              }
      FunctionName: Architecture
      Handler: app.lambda_handler
      Role: !GetAtt Role.Arn
      Runtime: python3.9

  x86Version:
    Type: AWS::Lambda::Version
    Properties:
      FunctionName: !Ref Function

  # armVersion:
  #   Type: AWS::Lambda::Version
  #   Properties:
  #     FunctionName: !Ref Function

  x86Alias:
    Type: AWS::Lambda::Alias
    Properties:
      FunctionName: !Ref Function
      FunctionVersion: !GetAtt x86Version.Version
      Name: x86

  # armAlias:
  #   Type: AWS::Lambda::Alias
  #   Properties:
  #     FunctionName: !Ref Function
  #     FunctionVersion: !GetAtt armVersion.Version
  #     Name: arm

  Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Path: "/"
