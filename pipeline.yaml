Parameters:
  ProjectSuffix:
    Type: String
    Description: Please enter a suffix for the project components

Resources:
  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "graviton2-lambda-${ProjectSuffix}"

  CodeCommitRepository:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: !Sub "graviton2-lambda-${ProjectSuffix}"

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
                - "cloudformation.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
      Path: "/"

  Application:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: !Sub "graviton2-lambda-${ProjectSuffix}"
      ComputePlatform: Lambda

  Deployment:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      AlarmConfiguration:
        Alarms:
          - Name: !Ref functionErrors
      ApplicationName: !Ref Application
      DeploymentConfigName: CodeDeployDefault.LambdaLinear10PercentEvery1Minute
      DeploymentStyle:
        DeploymentOption: WITH_TRAFFIC_CONTROL
        DeploymentType: BLUE_GREEN
      ServiceRoleArn: !GetAtt DeployRole.Arn

  DeployRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "codedeploy.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRoleForLambda
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
      Path: "/"

  AppPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
          - InputArtifacts: []
            OutputArtifacts:
              - Name: !Sub "graviton2-lambda-${ProjectSuffix}"
            Name: source
            Configuration:
              RepositoryName: !Sub "graviton2-lambda-${ProjectSuffix}"
              BranchName: main
              PollForSourceChanges: 'false'
            RunOrder: 1
            ActionTypeId:
              Version: '1'
              Provider: CodeCommit
              Category: Source
              Owner: AWS
        - Name: Deploy
          Actions:
          - Name: Deploy
            ActionTypeId:
              Category: Deploy
              Owner: AWS
              Provider: CloudFormation
              Version: '1'
            RunOrder: 1
            Configuration:
              ActionMode: REPLACE_ON_FAILURE
              Capabilities: CAPABILITY_IAM
              RoleArn: !GetAtt CodePipelineRole.Arn
              StackName: GravitonFunction
              TemplatePath: 'graviton2::template.yaml'
            OutputArtifacts: []
            InputArtifacts:
              - Name: !Sub "graviton2-lambda-${ProjectSuffix}"
        - Name: Release
          Actions:
            -
              Name: Release
              InputArtifacts:
                - Name: !Sub "graviton2-lambda-${ProjectSuffix}"
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CodeDeploy
              Configuration:
                ApplicationName: !Ref Application
                DeploymentGroupName: !Ref Deployment
              RunOrder: 1
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket


  AmazonCloudWatchEventRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        -
          PolicyName: cwe-pipeline-execution
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action: codepipeline:StartPipelineExecution
                Resource: !Join
                  - ""
                  - - "arn:aws:codepipeline:us-east-1:100682590469:"
                    - !Ref AppPipeline

  AmazonCloudWatchEventRule:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - 'CodeCommit Repository State Change'
        resources:
          - arn:aws:codecommit:us-east-1:100682590469:graviton2mmw
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - main
      Targets:
        -
          Arn: !Join
            - ""
            - - "arn:aws:codepipeline:us-east-1:100682590469:"
              - !Ref AppPipeline
          RoleArn: !GetAtt AmazonCloudWatchEventRole.Arn
          Id: codepipeline-AppPipeline

  functionErrors:
    Type: AWS::CloudWatch::Alarm
    Properties:
      Namespace: AWS/Lambda
      MetricName: Errors
      Dimensions:
        - Name: FunctionName
          Value: Architecture
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      Threshold: 0
      ComparisonOperator: GreaterThanThreshold

Outputs:
  CodeCommitRepoHTTPS:
    Description: The HTTPS URL to clone the repository
    Value: !GetAtt CodeCommitRepository.CloneUrlHttp
  CodeCommitRepoSSH:
    Description: The SSH URL to clone the repository
    Value: !GetAtt CodeCommitRepository.CloneUrlSsh
  CodeCommitRepoARN:
    Description: The ARN of the CodeCommit Repo
    Value: !GetAtt CodeCommitRepository.Arn
